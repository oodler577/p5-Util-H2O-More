0.0.1 Sat Dec 11 11:05:09 2021
    - initial module

0.0.2 Mon Dec 13 11:05:09 2021
    - bump to 0.0.2 without TRIAL so
      it can be installed via cpanm

0.0.3 Mon Dec 13 12:05:09 2021
    - `h2o` can now be properly exported
      via Util::H2O::More qw/h2o/;

0.0.4 Sun Jan 2 12:05:09 2022
    - no functional change, build only impacts
    - specified minimal Util::H2O version
      due to "-isa" not being supported
      before v0.14

0.0.5 Thu Feb 24 12:05:08 2022
    - deprecating baptise_deeply in favor of
      supporting -recurse in the baptise command
    - add opt2h2o for efficiently using h2o with
      Getopt::Long (examples included)
    - added o2h, to be the "inverse" operation of
      h2o; it supports the -recurse option.

0.0.6 Thu Feb 24 12:07:08 2022
    - POD fixes

0.0.7 Thu Jun 23 12:07:08 2022
    - using Util::H2O::o2h instead of the original
      implementation. Bumped req'd version of
      Util::H2O to >= 0.18 because of this.
    - Updated documentation and removed "experimental"
      warning. TPRC 2022 release!

0.0.8 Thu Jun 23 14:16:00 2022
    - for baptise created objects, needed to adjust
      $Util::H2O::_PACKAGE_REGEX to be more general

0.0.9 Fri Nov 25 14:00:00 2022
    - corrected some minor documentation and code
      examples for using opt2h2o with Getopt::Long

0.1   Thu Dec 16 14:00:00 2022
    - added h3o for bags of HASH refs, h3o and
      the reverser, o3h
    - added vmethods for ARRAY containers: all,
      push, pop, unshift, shift, scalar
    - updated POD, added tests for all new things
    - specified minimum version of Perl as 5.10
      in dist.ini and all meta data that follows

0.1.1 Mon Dec 19 15:00:00 2022
    - POD updates

0.1.2 Mon Dec 20 15:00:00 2022
    - POD updates

0.2.0 Thu Dec 22 15:00:01 2022
    - found and fixed bug:
      o3h was not working on ARRAYs
    - updated POD, added method C<a2o> intended
      for internal use; but some might find it
      useful

0.2.1 Fri Dec 23 15:00:02 2022
    - renamed h3o, o3h to d2o, o2d

0.2.2 Tue Dec 28 15:00:03 2022
    - added helper methods for use with configuration
      files: ini2o, o2ini, o2h2o
    - added a dependency of Config::Tiny for ini2o and
      o2ini

0.2.3 Tue Jan 02 15:00:04 2023
    - maintenance release, updating minimum requirement
      for Config::Tiny (2.28)

0.2.4 Tue Jan 17 15:00:51 2023
    - changed ini2o to ini2h2o, o2ini to h2o2ini to make
      the naming more consistent with already existing
      helper apps, like opt2h2o (sorry if this causes
      anyone problems; I don't assume many people use
      this too heavily atm).

0.2.5 Fri Jan 27 15:00:52 2023
    - documentation update only
    - added mention of h2o's "-arrays" in the d2o section;
      so "d2o" and "o2d" alone are probably not reason enough
      to use Util::H2O::More of the stock h2o with "-arrays"
      when dealing with complex results from a web API

0.2.6 Sat Jan 28 15:00:53 2023
    - incremented dependency on latest version of Util::H2O (0.22)
    - more POD wording fixes

0.2.7 Sat Jan 28 15:00:54 2023
    - fixed dist.ini to exclude stuff from repo that's messing
      up CPAN indexing (no-op)

0.2.8 Mon Jan 30 15:00:55 2023
    - added wrapper, Getopt2h2o that will 'require Getopt::Long'
      and then uses opt2h2o; it's perfect for hanging accessors
      on your commandline flag options

0.2.9 Wed Feb 08 15:00:56 2023
    - added 2 wrappers around Data::Dumper::Dumper to help with
      lazy debugging of data structures;
    - ddd LIST - iterates over the LIST, applying Data::Dumper::Dumper to each item
    - dddie LIST - same as ddd, but die's at the end of the LIST
    - POD updated to reflect these helpers
    - manually tested, no unit tests added for this

0.3.0 Thu Feb 09 15:00:57 2023
    - added tr4h2o for keys not appropriate for use as subroutine names/accessors
    - added backward compat wrappers, ini2o (ini2h2o) and o2ini (h2o2ini) due to
      unforseen impacts to users (who knew!?) of taking them away
    - added tests, POD
    - POD issues if found will usually just be addressed in the next release

0.3.1 Wed Aug 30 00:05:00 2023
    - added yaml2o and POD for it
    - yaml2o is like ini2o, but used with YAML files and YAML saved directly
      as a string to a SCALAR variable

0.3.2 Wed Aug 30 01:05:00 2023
    - POD update

0.3.3 Wed Nov 01 01:05:00 2023
    - made yaml2o an alias for yaml2h2o to be consistent with ini2h2o/ini2o
    - POD update

0.3.4 Wed Dec 12 01:04:00 2023
    - pinned module to Util::H2O after critical upstream bug affecting o2d
      (because it used o2h) fix (#20) - thank you!
    - pinned Util::H2O::More to Util::H2O 0.24
    - cleaned up o2d

0.3.5 Sun Aug 25 18:13:00 2024
    - updated POD
    - added an optional flag to d2o that will allow one to one to call a
      non-existing key using its setter form, and via AUTOLOAD will return
      undef, this saves some code and piercing the veil into the HASH itself;
    - For example,

        Before, it is necessary to pierce the veil of the HASH ref:

        my $hash_ref = somecall(..);
        d2o $hash_ref;
        my @mightexist = qw/foo bar baz/;
        foreach my $k (@mightexist) {
          say $hash_ref->$k if (exists $hash_ref->{$k}); #...before
        }

        After, missing methods return undef:

        my $hash_ref = somecall(..);
        d2o -autoundef, $hash_ref;
        my @mightexist = qw/foo bar baz/;
        foreach my $k (@mightexist) {
          say $hash_ref->$k if ($hash_ref->$k); #............after
        }

0.3.6 Sun Aug 26 00:55:00 2024
        - cleaned up some POD
        - added an alias "i" that does the same thing as "get" for
          the virtual methods associated with the ARRAY accessors
        - added before and after examples for some pathological uses
          of deeply nested hashs and arrays as an example of the potential
          for cleaning up old code with lots of HASH and ARRAY refs
          very easily

0.3.7 Sun Aug 26 01:05:00 2024
        - cleaned up some POD
        - added an alias "i" that does the same thing as "get" for
          the virtual methods associated with the ARRAY accessors
        - added before and after examples for some pathological uses
          of deeply nested hashs and arrays as an example of the potential
          for cleaning up old code with lots of HASH and ARRAY refs
          very easily
        - fixed test warnings

0.4.0 Tue Sep 03 02:27:00 2024
        - new minor version!
        - added HTTPTiny2h2o, which will take an HTTP::Tiny response HASH,
          the apply "d2o -autoundef" to whatever is returned via "contents"
        - HTTPTiny2h2o doesn't attempt to trap any exceptions or verify before
          the "decode_json" that it is actually JSON
        - see updated POD for HTTPTiny2h2o for more details

0.4.1 Tue Jan 03 02:27:00 2025
        - new minor version
	- Getopt2h2o now supports "-autoundef" option, but is not
	  on by default - tests added
	- HTTPTiny2h2o will applies "d2o -autoundef" if the 'content'
	  in the HTTP::Tiny response is undef'd - tests added
	- added tests to confirm HTTPTiny2h2o does the right thing
	  if the content of the response is a JSON array
	- HTTPTiny2h2o supports a "-autothrow" option, which when used
	  allows JSON decode exceptions to propagate up; otherwise
	  the default behavior is to ignore it and leave the contents
	  untouched (but accessor "->content" is still created)
        - see updated POD for HTTPTiny2h2o for more details
	- HTTPTiny2h2o this method is still evolving, feedback is
	  welcomed for different scenario

0.4.2 Tue Jan 03 03:27:00 2025
	- added POD about opt2h2o's support for Getopt::Long's ability
	  to define negative options; e.g., "option6!" is able to
	  accept "--option6" and "--no-option6".
